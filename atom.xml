<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小金</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-02-23T08:33:14.804Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>小金</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>利用python开发app实战</title>
    <link href="http://yoursite.com/2019/02/23/python%E5%BC%80%E5%8F%91app%E5%AE%9E%E6%88%98/"/>
    <id>http://yoursite.com/2019/02/23/python开发app实战/</id>
    <published>2019-02-23T05:09:52.000Z</published>
    <updated>2019-02-23T08:33:14.804Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote class="blockquote-center">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote><p>我很早之前就想开发一款app玩玩，无奈对java不够熟悉，之前也没有开发app的经验，因此一直耽搁了。最近想到尝试用python开发一款app，google搜索了一番后，发现确实有路可寻，目前也有了一些相对成熟的模块，于是便开始了动手实战，过程中发现这其中有很多坑，好在最终依靠google解决了，因此小记一番。<br><a id="more"></a></p><h3 id="说在前面的话"><a href="#说在前面的话" class="headerlink" title="说在前面的话"></a>说在前面的话</h3><p>　　python语言虽然很万能，但用它来开发app还是显得有点不对路，因此用python开发的app应当是作为编码练习、或者自娱自乐所用，加上目前这方面的模块还不是特别成熟，bug比较多，总而言之，劝君莫轻入。</p><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>　　利用python开发app需要用到python的一个模块–kivy，kivy是一个开源的，跨平台的Python开发框架，用于开发使用创新的应用程序。简而言之，这是一个python桌面程序开发框架（类似wxpython等模块），强大的是kivy支持linux、mac、windows、android、ios平台，这也是为什么开发app需要用到这个模块。<br>　　虽然kivy是跨平台的，但是想要在不同的平台使用python代码，还需要将python代码打包成对应平台的可执行程序，好在kivy项目下有个打包工具项目–buildozer，这是官方推荐的打包工具，因为相对比较简单，自动化程度高，其他项目比如：python-for-android也能起到类似的作用，这里不展开介绍。</p><h3 id="搭建kivy开发环境"><a href="#搭建kivy开发环境" class="headerlink" title="搭建kivy开发环境"></a>搭建kivy开发环境</h3><p>需要在pc上安装kivy开发环境，这里演示下mac与linux下的安装过程。</p><h2 id="install-kivy-for-mac"><a href="#install-kivy-for-mac" class="headerlink" title="install kivy for mac"></a>install kivy for mac</h2><p>安装一些依赖包：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install pkg-config sdl2 sdl2_image sdl2_ttf sdl2_mixer gstreamer</span><br></pre></td></tr></table></figure></p><p>安装cython以及kivy：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install cython==0.25</span><br><span class="line">pip install kivy</span><br></pre></td></tr></table></figure></p><p>如果安装kivy报错，则使用下面的方式安装kivy：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/kivy/kivy</span><br><span class="line">python setup.py install</span><br></pre></td></tr></table></figure></p><p>安装后测试：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$python</span><br><span class="line">Python <span class="number">2.7</span><span class="number">.10</span> (default, Jul <span class="number">15</span> <span class="number">2017</span>, <span class="number">17</span>:<span class="number">16</span>:<span class="number">57</span>)</span><br><span class="line">[GCC <span class="number">4.2</span><span class="number">.1</span> Compatible Apple LLVM <span class="number">9.0</span><span class="number">.0</span> (clang<span class="number">-900.0</span><span class="number">.31</span>)] on darwin</span><br><span class="line">Type <span class="string">"help"</span>, <span class="string">"copyright"</span>, <span class="string">"credits"</span> <span class="keyword">or</span> <span class="string">"license"</span> <span class="keyword">for</span> more information.</span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> kivy</span><br><span class="line">[INFO   ] [Logger      ] Record log <span class="keyword">in</span> /Users/didi/.kivy/logs/kivy_18<span class="number">-05</span><span class="number">-08</span>_4.txt</span><br><span class="line">[INFO   ] [Kivy        ] v1<span class="number">.10</span><span class="number">.1</span>.dev0, git<span class="number">-5</span>f6c66e, <span class="number">20180507</span></span><br><span class="line">[INFO   ] [Python      ] v2<span class="number">.7</span><span class="number">.10</span> (default, Jul <span class="number">15</span> <span class="number">2017</span>, <span class="number">17</span>:<span class="number">16</span>:<span class="number">57</span>)</span><br><span class="line">[GCC <span class="number">4.2</span><span class="number">.1</span> Compatible Apple LLVM <span class="number">9.0</span><span class="number">.0</span> (clang<span class="number">-900.0</span><span class="number">.31</span>)]</span><br></pre></td></tr></table></figure></p><p>说明：导入kivy模块没有报错则说明安装成功。</p><h2 id="install-kivy-for-centos7"><a href="#install-kivy-for-centos7" class="headerlink" title="install kivy for centos7"></a>install kivy for centos7</h2><p>先安装依赖<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">yum install \</span><br><span class="line">    make \</span><br><span class="line">    mercurial \</span><br><span class="line">    automake \</span><br><span class="line">    gcc \</span><br><span class="line">    gcc-c++ \</span><br><span class="line">    SDL_ttf-devel \</span><br><span class="line">    SDL_mixer-devel \</span><br><span class="line">    khrplatform-devel \</span><br><span class="line">    mesa-libGLES \</span><br><span class="line">    mesa-libGLES-devel \</span><br><span class="line">    gstreamer-plugins-good \</span><br><span class="line">    gstreamer \</span><br><span class="line">    gstreamer-python \</span><br><span class="line">    mtdev-devel \</span><br><span class="line">    python-devel \</span><br><span class="line">    python-pip \</span><br><span class="line">    java-devel</span><br></pre></td></tr></table></figure></p><p>安装cython以及kivy:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install Cython==0.20</span><br><span class="line">pip install kivy</span><br></pre></td></tr></table></figure></p><p>centos安装kivy参考：<a href="https://kivy.org/docs/installation/installation-linux.html#using-software-packages" target="_blank" rel="noopener">https://kivy.org/docs/installation/installation-linux.html#using-software-packages</a></p><p>说明：其他安装kivy方式可移步：<a href="https://kivy.org/#download（需要翻墙）" target="_blank" rel="noopener">https://kivy.org/#download（需要翻墙）</a></p><h3 id="用kivy开发第一个python-app"><a href="#用kivy开发第一个python-app" class="headerlink" title="用kivy开发第一个python app"></a>用kivy开发第一个python app</h3><p>安装完kivy就可以开发app程序了，这里演示下hello-world程序，关于kivy更复杂的用法不是本文重点，后面再成文介绍。<br>1) 创建一个main.py文件，写入：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> kivy.app <span class="keyword">import</span> App</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HelloApp</span><span class="params">(App)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    HelloApp().run()</span><br></pre></td></tr></table></figure></p><p>2)创建一个hello.kv文件，写入：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Label:</span><br><span class="line">    text: <span class="string">'Hello, World! I am nMask'</span></span><br></pre></td></tr></table></figure></p><p>简单说明：main.py是入口函数，定义了一个HelloApp类，该类继承kivy.app；hello.kv文件是kivy程序，相当于定义界面风格等，该文件命名规则为类名小写且去除app。</p><h3 id="运行第一个python-app"><a href="#运行第一个python-app" class="headerlink" title="运行第一个python app"></a>运行第一个python app</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python main.py</span><br></pre></td></tr></table></figure><p>运行结果:<br><img src="/images/python1.png" alt=""></p><h3 id="安装buildozer工具"><a href="#安装buildozer工具" class="headerlink" title="安装buildozer工具"></a>安装buildozer工具</h3><p>　　通过以上的编码，我创建了自己的第一个python app程序，该程序可以直接在mac、linux、windows平台下运行，那么如何让它在安卓或者苹果手机上运行呢？我们知道在安卓上运行，需要将其打包成apk安装程序，因此就需要用到前面提到过的buildozer工具，（buildozer工具可以打包kivy程序，支持android、ios等），buildozer的安装过程比较简单：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install buildozer</span><br></pre></td></tr></table></figure></p><h3 id="使用buildozer工具将kivy程序打包成apk"><a href="#使用buildozer工具将kivy程序打包成apk" class="headerlink" title="使用buildozer工具将kivy程序打包成apk"></a>使用buildozer工具将kivy程序打包成apk</h3><p>在python项目目录下运行：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">buildozer init</span><br></pre></td></tr></table></figure></p><p>运行成功将会创建一个配置文件buildozer.spec，可以通过修改配置文件更改app的名称等，然后运行：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">buildozer android debug deploy run</span><br></pre></td></tr></table></figure></p><p>运行以上命令将会生成跨平台的安装包，可适用安卓、ios等，如果用于安卓，则是利用python-for-android项目。</p><p>在第一次运行以上命令的时候，会自动在系统中下载安卓sdk等必要文件，如下图。（过程需要翻墙，而且有很多依赖需要下载）<br><img src="/images/python2.png/" alt=""></p><p>说明：这里只演示打包成apk文件，iso平台的可自行研究，参考文档：<a href="https://github.com/kivy/buildozer。" target="_blank" rel="noopener">https://github.com/kivy/buildozer。</a></p><h3 id="python-apk程序测试"><a href="#python-apk程序测试" class="headerlink" title="python apk程序测试"></a>python apk程序测试</h3><p>如果以上步骤都运行成功的话，应该会在项目目录下的bin目录下生成一个apk文件，类似如下：<br><img src="/images/python3.png" alt=""></p><p>然后将apk下载到安卓系统的手机上，安装即可，测试效果如下：<br><img src="/images/python4.png" alt=""></p><p>打开app：<br><img src="/images/python5.png" alt=""></p><h3 id="buildozer使用说明"><a href="#buildozer使用说明" class="headerlink" title="buildozer使用说明"></a>buildozer使用说明</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">Usage:</span><br><span class="line">    buildozer [--profile &lt;name&gt;] [--verbose] [target] &lt;command&gt;...</span><br><span class="line">    buildozer --version</span><br><span class="line">Available targets:</span><br><span class="line">  android        Android target, based on python-<span class="keyword">for</span>-android project</span><br><span class="line">  ios            iOS target, based on kivy-ios project</span><br><span class="line">  android_old    Android target, based on python-<span class="keyword">for</span>-android project (old toolchain)</span><br><span class="line">Global commands (without target):</span><br><span class="line">  distclean          Clean the whole Buildozer environment.</span><br><span class="line">  help               Show the Buildozer help.</span><br><span class="line">  init               Create a initial buildozer.spec <span class="keyword">in</span> the current directory</span><br><span class="line">  serve              Serve the bin directory via SimpleHTTPServer</span><br><span class="line">  setdefault         Set the default command to run when no arguments are given</span><br><span class="line">  version            Show the Buildozer version</span><br><span class="line">Target commands:</span><br><span class="line">  clean      Clean the target environment</span><br><span class="line">  update     Update the target dependencies</span><br><span class="line">  debug      Build the application <span class="keyword">in</span> debug mode</span><br><span class="line">  release    Build the application <span class="keyword">in</span> release mode</span><br><span class="line">  deploy     Deploy the application on the device</span><br><span class="line">  run        Run the application on the device</span><br><span class="line">  serve      Serve the bin directory via SimpleHTTPServer</span><br><span class="line">Target <span class="string">"android_old"</span> commands:</span><br><span class="line">  adb                Run adb <span class="keyword">from</span> the Android SDK. Args must come after --, <span class="keyword">or</span></span><br><span class="line">                     use --alias to make an alias</span><br><span class="line">  logcat             Show the log <span class="keyword">from</span> the device</span><br><span class="line">Target <span class="string">"ios"</span> commands:</span><br><span class="line">  list_identities    List the available identities to use <span class="keyword">for</span> signing.</span><br><span class="line">  xcode              Open the xcode project.</span><br><span class="line">Target <span class="string">"android"</span> commands:</span><br><span class="line">  adb                Run adb <span class="keyword">from</span> the Android SDK. Args must come after --, <span class="keyword">or</span></span><br><span class="line">                     use --alias to make an alias</span><br><span class="line">  logcat             Show the log <span class="keyword">from</span> the device</span><br><span class="line">  p4a                Run p4a commands. Args must come after --, <span class="keyword">or</span> use --alias</span><br><span class="line">                     to make an alias</span><br></pre></td></tr></table></figure><h3 id="buildozer打包过程中的坑点"><a href="#buildozer打包过程中的坑点" class="headerlink" title="buildozer打包过程中的坑点"></a>buildozer打包过程中的坑点</h3><p>如果在打包过程中遇到报错，可以修改buildozer.spec配置文件中的log_level为2，然后重新运行，可以看具体的错误信息。</p><h3 id="报错：You-might-have-missed-to-install-32bits-libs"><a href="#报错：You-might-have-missed-to-install-32bits-libs" class="headerlink" title="报错：You might have missed to install 32bits libs"></a>报错：You might have missed to install 32bits libs</h3><p>这个错是我在centos7上运行时报的错，大意是系统缺少了某些32位的依赖文件。<br>解决方案：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install --skip-broken glibc.i686 arts.i686 audiofile.i686 bzip2-libs.i686 cairo.i686 cyrus-sasl-lib.i686 dbus-libs.i686 directfb.i686 esound-libs.i686 fltk.i686 freeglut.i686 gtk2.i686 hal-libs.i686 imlib.i686 lcms-libs.i686 lesstif.i686 libacl.i686 libao.i686 libattr.i686 libcap.i686 libdrm.i686 libexif.i686 libgnomecanvas.i686 libICE.i686 libieee1284.i686 libsigc++20.i686 libSM.i686 libtool-ltdl.i686 libusb.i686 libwmf.i686 libwmf-lite.i686 libX11.i686 libXau.i686 libXaw.i686 libXcomposite.i686 libXdamage.i686 libXdmcp.i686 libXext.i686 libXfixes.i686 libxkbfile.i686 libxml2.i686 libXmu.i686 libXp.i686 libXpm.i686 libXScrnSaver.i686 libxslt.i686 libXt.i686 libXtst.i686 libXv.i686 libXxf86vm.i686 lzo.i686 mesa-libGL.i686 mesa-libGLU.i686 nas-libs.i686 nss_ldap.i686 cdk.i686 openldap.i686 pam.i686 popt.i686 pulseaudio-libs.i686 sane-backends-libs-gphoto2.i686 sane-backends-libs.i686 SDL.i686 svgalib.i686 unixODBC.i686 zlib.i686 compat-expat1.i686 compat-libstdc++-33.i686 openal-soft.i686 alsa-oss-libs.i686 redhat-lsb.i686 alsa-plugins-pulseaudio.i686 alsa-plugins-oss.i686 alsa-lib.i686 nspluginwrapper.i686 libXv.i686 libXScrnSaver.i686 qt.i686 qt-x11.i686 pulseaudio-libs.i686 pulseaudio-libs-glib2.i686 alsa-plugins-pulseaudio.i686 python-matplotli</span><br></pre></td></tr></table></figure></p><p>参考：<a href="https://ask.fedoraproject.org/en/question/9556/how-do-i-install-32bit-libraries-on-a-64-bit-fedora/" target="_blank" rel="noopener">https://ask.fedoraproject.org/en/question/9556/how-do-i-install-32bit-libraries-on-a-64-bit-fedora/</a></p><h2 id="报错：Error-compiling-Cython-file"><a href="#报错：Error-compiling-Cython-file" class="headerlink" title="报错：Error compiling Cython file"></a>报错：Error compiling Cython file</h2><p>这是在打包的最后一步，将apk文件copy到项目bin目录下时报的错，是buildozer的一个bug。<br>解决方案：<br>修改/usr/local/lib/python2.7/dist-packages/buildozer/tagets/android.py文件：<br>(1)在文件开头导入:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">from distutils.version import LooseVersion</span><br></pre></td></tr></table></figure></p><p>(2) 将786行:XXX found how the apk name is really built from the title这一行以下的代码替换为：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">__sdk_dir = self.android_sdk_dir</span><br><span class="line">build_tools_versions = os.listdir(join(__sdk_dir, <span class="string">'build-tools'</span>))</span><br><span class="line">build_tools_versions = sorted(build_tools_versions, key=LooseVersion)</span><br><span class="line">build_tools_version = build_tools_versions[<span class="number">-1</span>]</span><br><span class="line">gradle_files = [<span class="string">"build.gradle"</span>, <span class="string">"gradle"</span>, <span class="string">"gradlew"</span>]</span><br><span class="line">is_gradle_build = any((exists(join(dist_dir, x)) <span class="keyword">for</span> x <span class="keyword">in</span> gradle_files)) <span class="keyword">and</span> build_tools_version &gt;= ’<span class="number">25.0</span><span class="string">'</span></span><br></pre></td></tr></table></figure></p><h3 id="buildozer虚拟机"><a href="#buildozer虚拟机" class="headerlink" title="buildozer虚拟机"></a>buildozer虚拟机</h3><p>　　kivy官方推出了一个buildozer虚拟机镜像，已经安装好了buildozer以及一些依赖文件，为buildozer打包测试提供平台。由于之前我在mac上利用buildozer打包一直报错，后来换成centos也依然没有成功，因此便下载了此虚拟机，测试效果如下：<br><img src="/images/python6.png" alt=""><br>虚拟机下载地址：<a href="http://txzone.net/files/torrents/kivy-buildozer-vm-2.0.zip" target="_blank" rel="noopener">http://txzone.net/files/torrents/kivy-buildozer-vm-2.0.zip</a></p><p>说明：对于无法解决依赖问题的朋友，可以使用此虚拟机进行程序打包，开发环境还是推荐用自己的本机。</p><h3 id="kivy开发实例"><a href="#kivy开发实例" class="headerlink" title="kivy开发实例"></a>kivy开发实例</h3><p>　　因为本文重点在于介绍如何利用kivy+buildozer开发一款python app，因此对于kivy的开发过程，以及app功能进行了最简化。想要学习如何开发更复杂的app，可参考：<a href="https://muxuezi.github.io/posts/kivy-perface.html#" target="_blank" rel="noopener">https://muxuezi.github.io/posts/kivy-perface.html#</a></p><p>～！～ 折腾python使我快乐，……，想想还是滚回去学java吧 ～！～</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;优秀的人，不是不合群，而是他们合群的人里面没有你&lt;/blockquote&gt;

&lt;p&gt;我很早之前就想开发一款app玩玩，无奈对java不够熟悉，之前也没有开发app的经验，因此一直耽搁了。最近想到尝试用python开发一款app，google搜索了一番后，发现确实有路可寻，目前也有了一些相对成熟的模块，于是便开始了动手实战，过程中发现这其中有很多坑，好在最终依靠google解决了，因此小记一番。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>博客文章样式写法</title>
    <link href="http://yoursite.com/2019/01/11/title/"/>
    <id>http://yoursite.com/2019/01/11/title/</id>
    <published>2019-01-11T05:01:48.000Z</published>
    <updated>2019-02-24T10:34:33.503Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote class="blockquote-center">这1秒开始相信,幸福就会靠近</blockquote><p>当创建博客时，就会以这种格式生成Markdown文件，如这篇博客的文件名就生成 2019-01-11-blog.md 这种形式。其中相关变量说明如下表：</p><h3 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new xxxx   (xxxx这里指要创建的文章名字)</span><br></pre></td></tr></table></figure><p>生成路径:source/_posts/xxx</p><a id="more"></a><h3 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h3><p>经过上面上面一系列的准备工作，现在差不多就可以安心的写作了。打开 source/_posts 文件夹下刚创建的 xxx.md 文件，你会发现有如下内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">--</span><br><span class="line">title: xxxx</span><br><span class="line">date: 2019-01-11 13:01:48</span><br><span class="line">tags: </span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><p>注意，这里的 title 是可以随便改的（文章的名称），当然了 date 也是可以改，不过没有改的必要；这里要说一下 tags 这个属性，如果需要配置多个有两种方式(也可以保持默认)：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tags: [tag1, tag2, tag3]</span><br></pre></td></tr></table></figure></p><p>或者<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tags:</span><br><span class="line">  - tag1</span><br><span class="line">  - tag2</span><br><span class="line">  - tag3</span><br></pre></td></tr></table></figure></p><p>接下来我们去学习一下语法规范。</p><h3 id="代码用框"><a href="#代码用框" class="headerlink" title="代码用框"></a>代码用框</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">里面可以写自己想写的东西</span><br></pre></td></tr></table></figure><p><img src="/images/符号.png" alt=""></p><p>没错就这个符号左右三个，然后在中间回车，紧接着就形成了上面三个下面三个，内容写在上面三个和下面三个的中间。</p><h3 id="斜体和粗体"><a href="#斜体和粗体" class="headerlink" title="斜体和粗体"></a>斜体和粗体</h3><p>写法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">*这是斜体* 或 _这也是斜体_ </span><br><span class="line">**这是粗体**</span><br><span class="line">***这是加粗斜体***</span><br><span class="line">~~这是删除线~~</span><br></pre></td></tr></table></figure></p><p>效果：<br><em>这是斜体</em> 或 <em>这也是斜体</em><br><strong>这是粗体</strong><br><strong><em>这是加粗斜体</em></strong><br><del>这是删除线</del></p><h3 id="分级标题"><a href="#分级标题" class="headerlink" title="分级标题"></a>分级标题</h3><p>写法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure></p><p>效果：<br><img src="/images/分级标签.webp" alt=""></p><h3 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h3><p>写法:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">行内形式：[我的博客](http://blog.xiaojinyou.top)</span><br><span class="line">参考形式：[我的博客][1]，有一个很好的平台-[简书][2]</span><br><span class="line">[1]:http://blog.xiaojinyou.top</span><br><span class="line">[2]:http://www.jianshu.com/</span><br><span class="line">自动链接：我的博客地址&lt;http://blog.xiaojinyou.top&gt;</span><br></pre></td></tr></table></figure><p>效果：</p><p>行内形式：<a href="http://blog.xiaojinyou.top" target="_blank" rel="noopener">我的博客</a><br>参考形式：[我的博客][1]，有一个很好的平台-[简书][2]<br>[1]:<a href="http://blog.xiaojinyou.top" target="_blank" rel="noopener">http://blog.xiaojinyou.top</a><br>[2]:<a href="http://www.jianshu.com/" target="_blank" rel="noopener">http://www.jianshu.com/</a><br>自动链接：我的博客地址<a href="http://blog.xiaojinyou.top" target="_blank" rel="noopener">http://blog.xiaojinyou.top</a></p><h3 id="下面是带链接的列表"><a href="#下面是带链接的列表" class="headerlink" title="下面是带链接的列表"></a>下面是带链接的列表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">* [我喜欢的动漫是七龙珠](http://www.iqiyi.com/a_19rrhb5shh.html?vfm=2008_aldbd)</span><br><span class="line">* [大鱼海棠电影](https://v.sogou.com/movie/mzuwy3k7gi3demrwg4e3j46t4o5khtge.html)</span><br></pre></td></tr></table></figure><p>效果：</p><ul><li><a href="http://www.iqiyi.com/a_19rrhb5shh.html?vfm=2008_aldbd" target="_blank" rel="noopener">我喜欢的动漫是七龙珠</a></li><li><a href="https://v.sogou.com/movie/mzuwy3k7gi3demrwg4e3j46t4o5khtge.html" target="_blank" rel="noopener">大鱼海棠电影</a></li></ul><h2 id="华丽的分割线"><a href="#华丽的分割线" class="headerlink" title="华丽的分割线"></a>华丽的分割线</h2><p>分割线可以由* - _（星号，减号，底线）这3个符号的至少3个符号表示，注意至少要3个，且不需要连续，有空格也可以</p><p><img src="/images/分割线1.png" alt="">  <img src="/images/分割线2.png" alt=""></p><p>应该看得懂吧，但是为了代码的排版好看，你们自己定规则吧，前面有用到星号，建议用减号</p><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>无序列表<br>写法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">* 无序列表项1</span><br><span class="line">+ 无序列表项2</span><br><span class="line">- 无序列表项3</span><br></pre></td></tr></table></figure><p>效果：</p><ul><li>无序列表项1</li></ul><ul><li>无序列表项2</li></ul><ul><li>无序列表项3</li></ul><p>有序列表<br>写法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 有序列表项1</span><br><span class="line">2. 有序列表项2</span><br><span class="line">3. 有序列表项3</span><br></pre></td></tr></table></figure><p>效果：</p><ol><li>有序列表项1</li><li>有序列表项2</li><li>有序列表项3</li></ol><h3 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h3><p>在 Hexo 中插入图片，首先需要将图片放在 source/images/ 文件夹下，然后如下方式进行插入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![](/images/大鱼海棠.gif)</span><br></pre></td></tr></table></figure><p>效果：</p><hr><p><img src="/images/大鱼海棠.gif" alt=""></p><hr><h3 id="区块引用"><a href="#区块引用" class="headerlink" title="区块引用"></a>区块引用</h3><p>比如说，你想对某个部分做的内容做一些说明或者引用某某的话等，可以用这个语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* 不以结婚为目的的谈恋爱都叫耍流氓</span><br><span class="line">    &gt; 这是老师说的</span><br><span class="line">* 前方高能</span><br><span class="line">    &gt; 注意: 这里是为了提醒前面有很刺激的事情发生，请做好准备。</span><br></pre></td></tr></table></figure><p>效果:</p><ul><li>不以结婚为目的的谈恋爱都叫耍流氓<blockquote><p>这是老师说的</p></blockquote></li><li>前方高能<blockquote><p>注意: 这里是为了提醒前面有很刺激的事情发生，请做好准备。</p></blockquote></li></ul><p>无序列表下方的便是引用，可以有多种用途，看你的需求了，用法就是在语句前面加一个 &gt; ，注意是英文的那个右尖括号，注意空格</p><p>引用因为是一个区块，理论上是应该什么内容都可以放，比如说：标题，列表，引用等等<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; ## 标题</span><br><span class="line">&gt; * 看我干啥</span><br><span class="line">&gt;    &gt;瞅你咋滴</span><br><span class="line">&gt; * 小明：着急下课</span><br><span class="line">&gt;    &gt; 小红：干嘛</span><br><span class="line">&gt; * 小明：上厕所</span><br><span class="line">&gt;    &gt;小红：@_@脸红</span><br></pre></td></tr></table></figure></p><p>效果</p><blockquote><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><ul><li>看我干啥<blockquote><p>瞅你咋滴</p></blockquote></li><li>小明：着急下课<blockquote><p>小红：干嘛</p></blockquote></li><li>小明：上厕所<blockquote><p>小红：@_@脸红</p></blockquote></li></ul></blockquote><p>将上面的代码稍微改一下，全部加上引用标签，就变成了一个大的引用，还有引用里面还有引用，那引用嵌套引用还没有别的写法呢？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; 一级引用</span><br><span class="line">&gt;&gt; 二级引用</span><br><span class="line">&gt;&gt;&gt; 三级引用</span><br><span class="line">&gt;&gt;&gt;&gt; 四级引用</span><br><span class="line">&gt;&gt;&gt;&gt;&gt; 五级引用</span><br></pre></td></tr></table></figure><p>效果:</p><blockquote><p>一级引用</p><blockquote><p>二级引用</p><blockquote><p>三级引用</p><blockquote><p>四级引用</p><blockquote><p>五级引用</p></blockquote></blockquote></blockquote></blockquote></blockquote><p>以上可以看出，想要在上一次引用中嵌套一层引用，只需多加一个&gt;，理论上可以无限嵌套，我就不整那么<br>了，注意：多层嵌套的&gt;是不需要连续在一起的，只要在一行就可以了，中间允许有空格，但是为了好看，还是把排版搞好吧</p><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| 表头1|表头2|表头3|表头4|</span><br><span class="line">|-------|:-----:|:-----:|-----:|</span><br><span class="line">|默认左对齐|左对齐|居中对其|右对齐|</span><br><span class="line">|默认左对齐|左对齐|居中对其|右对齐|</span><br><span class="line">|默认左对齐|左对齐|居中对其|右对齐|</span><br></pre></td></tr></table></figure><p>效果:</p><table><thead><tr><th>表头1</th><th style="text-align:center">表头2</th><th style="text-align:center">表头3</th><th style="text-align:right">表头4</th></tr></thead><tbody><tr><td>默认左对齐</td><td style="text-align:center">左对齐</td><td style="text-align:center">居中对其</td><td style="text-align:right">右对齐</td></tr><tr><td>默认左对齐</td><td style="text-align:center">左对齐</td><td style="text-align:center">居中对其</td><td style="text-align:right">右对齐</td></tr><tr><td>默认左对齐</td><td style="text-align:center">左对齐</td><td style="text-align:center">居中对其</td><td style="text-align:right">右对齐</td></tr></tbody></table><p>提示:<br>:–: (两个:表示居中)<br>:–  (一个:在左边表示左对齐)<br> –：(一个:在右边表示右对齐)</p><table><thead><tr><th style="text-align:center">name</th><th style="text-align:left">age</th><th style="text-align:left">sex</th></tr></thead><tbody><tr><td style="text-align:center">tony</td><td style="text-align:left">20</td><td style="text-align:left">男</td></tr><tr><td style="text-align:center">lucy</td><td style="text-align:left">18</td><td style="text-align:left">女</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;这1秒开始相信,幸福就会靠近&lt;/blockquote&gt;

&lt;p&gt;当创建博客时，就会以这种格式生成Markdown文件，如这篇博客的文件名就生成 2019-01-11-blog.md 这种形式。其中相关变量说明如下表：&lt;/p&gt;
&lt;h3 id=&quot;创建&quot;&gt;&lt;a href=&quot;#创建&quot; class=&quot;headerlink&quot; title=&quot;创建&quot;&gt;&lt;/a&gt;创建&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo new xxxx   (xxxx这里指要创建的文章名字)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;生成路径:source/_posts/xxx&lt;/p&gt;
    
    </summary>
    
    
      <category term="categories" scheme="http://yoursite.com/tags/categories/"/>
    
  </entry>
  
</feed>
